Parsed test spec with 4 sessions

starting permutation: cjj5 s2a s1a s3a s1b s1c
step cjj5: 
    INSERT INTO _timescaledb_config.bgw_job (application_name, job_type, schedule_INTERVAL, max_runtime, max_retries, retry_period) VALUES
    ('test_job_1', 'bgw_test_job_5_lock', INTERVAL '100ms', INTERVAL '100s', 3, INTERVAL '1s');

step s2a: SELECT pg_advisory_lock(1);
pg_advisory_lock

               
step s1a: SELECT ts_bgw_db_scheduler_test_run(25); select pg_sleep(0.2);
ts_bgw_db_scheduler_test_run

               
pg_sleep       

               
step s3a: select ts_test_bgw_job_delete_by_id(id) FROM _timescaledb_config.bgw_job;
ts_test_bgw_job_delete_by_id

               
step s1b: SELECT ts_bgw_db_scheduler_test_wait_for_scheduler_finish();
ts_bgw_db_scheduler_test_wait_for_scheduler_finish

               
step s1c: COMMIT;
msg_no         mock_time      application_namemsg            

0              0              DB Scheduler   [TESTING] Registered new background worker
1              0              DB Scheduler   [TESTING] Wait until 25000, started at 0
0              0              test_job_1     Before lock job 5
1              0              test_job_1     job 1000 threw an error
2              0              test_job_1     canceling statement due to user request
pg_advisory_unlock_all

               

starting permutation: cjj5 s2a s3a s1a s1b s1c
step cjj5: 
    INSERT INTO _timescaledb_config.bgw_job (application_name, job_type, schedule_INTERVAL, max_runtime, max_retries, retry_period) VALUES
    ('test_job_1', 'bgw_test_job_5_lock', INTERVAL '100ms', INTERVAL '100s', 3, INTERVAL '1s');

step s2a: SELECT pg_advisory_lock(1);
pg_advisory_lock

               
step s3a: select ts_test_bgw_job_delete_by_id(id) FROM _timescaledb_config.bgw_job;
ts_test_bgw_job_delete_by_id

               
step s1a: SELECT ts_bgw_db_scheduler_test_run(25); select pg_sleep(0.2);
ts_bgw_db_scheduler_test_run

               
pg_sleep       

               
step s1b: SELECT ts_bgw_db_scheduler_test_wait_for_scheduler_finish();
ts_bgw_db_scheduler_test_wait_for_scheduler_finish

               
step s1c: COMMIT;
msg_no         mock_time      application_namemsg            

0              0              DB Scheduler   [TESTING] Wait until 25000, started at 0
pg_advisory_unlock_all

               

starting permutation: cjj6 s2a s1a s3a s2u s1b s1c
step cjj6: 
    INSERT INTO _timescaledb_config.bgw_job (application_name, job_type, schedule_INTERVAL, max_runtime, max_retries, retry_period) VALUES
    ('test_job_1', 'bgw_test_job_6_lock_notxn', INTERVAL '100ms', INTERVAL '100s', 3, INTERVAL '1s');

step s2a: SELECT pg_advisory_lock(1);
pg_advisory_lock

               
step s1a: SELECT ts_bgw_db_scheduler_test_run(25); select pg_sleep(0.2);
ts_bgw_db_scheduler_test_run

               
pg_sleep       

               
step s3a: select ts_test_bgw_job_delete_by_id(id) FROM _timescaledb_config.bgw_job;
ERROR:  canceling statement due to lock timeout
step s2u: SELECT pg_advisory_unlock(1);
pg_advisory_unlock

t              
step s1b: SELECT ts_bgw_db_scheduler_test_wait_for_scheduler_finish();
ts_bgw_db_scheduler_test_wait_for_scheduler_finish

               
step s1c: COMMIT;
msg_no         mock_time      application_namemsg            

0              0              DB Scheduler   [TESTING] Registered new background worker
1              0              DB Scheduler   [TESTING] Wait until 25000, started at 0
0              0              test_job_1     Before lock job 6
1              0              test_job_1     After lock job 5
pg_advisory_unlock_all

               
