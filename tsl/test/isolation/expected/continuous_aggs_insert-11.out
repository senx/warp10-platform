Parsed test spec with 12 sessions

starting permutation: LockCompleted Refresh2 Refresh UnlockCompleted
step LockCompleted: BEGIN; LOCK TABLE _timescaledb_catalog.continuous_aggs_completed_threshold;
step Refresh2: REFRESH MATERIALIZED VIEW continuous_view; <waiting ...>
step Refresh: REFRESH MATERIALIZED VIEW continuous_view; <waiting ...>
step UnlockCompleted: ROLLBACK;
step Refresh2: <... completed>
LOG:  new materialization range not found for public.ts_continuous_test (time column time): not enough new data past completion threshold of 15 as of 29
LOG:  materializing continuous aggregate public.continuous_view: nothing to invalidate, no new range
LOG:  materializing continuous aggregate public.continuous_view: no new range to materialize or invalidations found, exiting early
step Refresh: <... completed>

starting permutation: Ib LockCompleted I1 Refresh Ic UnlockCompleted
step Ib: BEGIN; SET LOCAL lock_timeout = '50ms'; SET LOCAL deadlock_timeout = '10ms';
step LockCompleted: BEGIN; LOCK TABLE _timescaledb_catalog.continuous_aggs_completed_threshold;
step I1: INSERT INTO ts_continuous_test VALUES (1, 1);
step Refresh: REFRESH MATERIALIZED VIEW continuous_view; <waiting ...>
step Ic: COMMIT;
step UnlockCompleted: ROLLBACK;
LOG:  materializing continuous aggregate public.continuous_view: nothing to invalidate, new range up to 15
step Refresh: <... completed>

starting permutation: Ib LockCompleted Refresh I1 Ic UnlockCompleted
step Ib: BEGIN; SET LOCAL lock_timeout = '50ms'; SET LOCAL deadlock_timeout = '10ms';
step LockCompleted: BEGIN; LOCK TABLE _timescaledb_catalog.continuous_aggs_completed_threshold;
step Refresh: REFRESH MATERIALIZED VIEW continuous_view; <waiting ...>
step I1: INSERT INTO ts_continuous_test VALUES (1, 1);
step Ic: COMMIT;
step UnlockCompleted: ROLLBACK;
LOG:  materializing continuous aggregate public.continuous_view: nothing to invalidate, new range up to 15
step Refresh: <... completed>

starting permutation: Sb LockCompleted Refresh S1 Sc UnlockCompleted
step Sb: BEGIN; SET LOCAL lock_timeout = '50ms'; SET LOCAL deadlock_timeout = '10ms';
step LockCompleted: BEGIN; LOCK TABLE _timescaledb_catalog.continuous_aggs_completed_threshold;
step Refresh: REFRESH MATERIALIZED VIEW continuous_view; <waiting ...>
step S1: SELECT count(*) FROM ts_continuous_test;
count          

30             
step Sc: COMMIT;
step UnlockCompleted: ROLLBACK;
LOG:  materializing continuous aggregate public.continuous_view: nothing to invalidate, new range up to 15
step Refresh: <... completed>

starting permutation: Sb LockCompleted S1 Refresh Sc UnlockCompleted
step Sb: BEGIN; SET LOCAL lock_timeout = '50ms'; SET LOCAL deadlock_timeout = '10ms';
step LockCompleted: BEGIN; LOCK TABLE _timescaledb_catalog.continuous_aggs_completed_threshold;
step S1: SELECT count(*) FROM ts_continuous_test;
count          

30             
step Refresh: REFRESH MATERIALIZED VIEW continuous_view; <waiting ...>
step Sc: COMMIT;
step UnlockCompleted: ROLLBACK;
LOG:  materializing continuous aggregate public.continuous_view: nothing to invalidate, new range up to 15
step Refresh: <... completed>

starting permutation: Ib LockInvalThr Refresh I1 Ic UnlockInvalThr
step Ib: BEGIN; SET LOCAL lock_timeout = '50ms'; SET LOCAL deadlock_timeout = '10ms';
step LockInvalThr: BEGIN; LOCK TABLE _timescaledb_catalog.continuous_aggs_invalidation_threshold IN SHARE MODE;
LOG:  materializing continuous aggregate public.continuous_view: nothing to invalidate, new range up to 15
step Refresh: REFRESH MATERIALIZED VIEW continuous_view; <waiting ...>
step I1: INSERT INTO ts_continuous_test VALUES (1, 1);
step Ic: COMMIT; <waiting ...>
step UnlockInvalThr: ROLLBACK;
step Refresh: <... completed>
step Ic: <... completed>

starting permutation: Ib LockInvalThr I1 Refresh Ic UnlockInvalThr
step Ib: BEGIN; SET LOCAL lock_timeout = '50ms'; SET LOCAL deadlock_timeout = '10ms';
step LockInvalThr: BEGIN; LOCK TABLE _timescaledb_catalog.continuous_aggs_invalidation_threshold IN SHARE MODE;
step I1: INSERT INTO ts_continuous_test VALUES (1, 1);
LOG:  materializing continuous aggregate public.continuous_view: nothing to invalidate, new range up to 15
step Refresh: REFRESH MATERIALIZED VIEW continuous_view; <waiting ...>
step Ic: COMMIT; <waiting ...>
step UnlockInvalThr: ROLLBACK;
step Refresh: <... completed>
step Ic: <... completed>

starting permutation: Ib LockInval I1 Ic Refresh UnlockInval
step Ib: BEGIN; SET LOCAL lock_timeout = '50ms'; SET LOCAL deadlock_timeout = '10ms';
step LockInval: BEGIN; LOCK TABLE _timescaledb_catalog.continuous_aggs_hypertable_invalidation_log;
step I1: INSERT INTO ts_continuous_test VALUES (1, 1);
step Ic: COMMIT;
step Refresh: REFRESH MATERIALIZED VIEW continuous_view; <waiting ...>
step UnlockInval: ROLLBACK;
LOG:  materializing continuous aggregate public.continuous_view: nothing to invalidate, new range up to 15
step Refresh: <... completed>

starting permutation: Ipb LockInval Refresh Ip1 Ipc UnlockInval
step Ipb: BEGIN; SET LOCAL lock_timeout = '50ms'; SET LOCAL deadlock_timeout = '10ms';
step LockInval: BEGIN; LOCK TABLE _timescaledb_catalog.continuous_aggs_hypertable_invalidation_log;
step Refresh: REFRESH MATERIALIZED VIEW continuous_view; <waiting ...>
step Ip1: INSERT INTO ts_continuous_test VALUES (29, 29);
step Ipc: COMMIT;
step UnlockInval: ROLLBACK;
LOG:  materializing continuous aggregate public.continuous_view: nothing to invalidate, new range up to 15
step Refresh: <... completed>

starting permutation: Ipb LockInval Ip1 Refresh Ipc UnlockInval
step Ipb: BEGIN; SET LOCAL lock_timeout = '50ms'; SET LOCAL deadlock_timeout = '10ms';
step LockInval: BEGIN; LOCK TABLE _timescaledb_catalog.continuous_aggs_hypertable_invalidation_log;
step Ip1: INSERT INTO ts_continuous_test VALUES (29, 29);
step Refresh: REFRESH MATERIALIZED VIEW continuous_view; <waiting ...>
step Ipc: COMMIT;
step UnlockInval: ROLLBACK;
LOG:  materializing continuous aggregate public.continuous_view: nothing to invalidate, new range up to 15
step Refresh: <... completed>

starting permutation: Ipb LockInval Ip1 Ipc Refresh UnlockInval
step Ipb: BEGIN; SET LOCAL lock_timeout = '50ms'; SET LOCAL deadlock_timeout = '10ms';
step LockInval: BEGIN; LOCK TABLE _timescaledb_catalog.continuous_aggs_hypertable_invalidation_log;
step Ip1: INSERT INTO ts_continuous_test VALUES (29, 29);
step Ipc: COMMIT;
step Refresh: REFRESH MATERIALIZED VIEW continuous_view; <waiting ...>
step UnlockInval: ROLLBACK;
LOG:  materializing continuous aggregate public.continuous_view: nothing to invalidate, new range up to 15
step Refresh: <... completed>

starting permutation: Refresh SV1 LockMatInval Refresh1 Ib I1 LockInvalThrEx Ic UnlockMatInval UnlockInvalThrEx SV1
LOG:  materializing continuous aggregate public.continuous_view: nothing to invalidate, new range up to 15
step Refresh: REFRESH MATERIALIZED VIEW continuous_view;
step SV1: SELECT * FROM continuous_view order by 1;
time_bucket    count          

0              5              
5              5              
10             5              
step LockMatInval: BEGIN; LOCK TABLE _timescaledb_catalog.continuous_aggs_materialization_invalidation_log;
step Refresh1: REFRESH MATERIALIZED VIEW continuous_view; <waiting ...>
step Ib: BEGIN; SET LOCAL lock_timeout = '50ms'; SET LOCAL deadlock_timeout = '10ms';
step I1: INSERT INTO ts_continuous_test VALUES (1, 1);
step LockInvalThrEx: BEGIN; LOCK TABLE _timescaledb_catalog.continuous_aggs_invalidation_threshold ;
step Ic: COMMIT; <waiting ...>
step UnlockMatInval: ROLLBACK;
LOG:  new materialization range not found for public.ts_continuous_test (time column time): not enough new data past completion threshold of 15 as of 29
LOG:  materializing continuous aggregate public.continuous_view: nothing to invalidate, no new range
LOG:  materializing continuous aggregate public.continuous_view: no new range to materialize or invalidations found, exiting early
step Refresh1: <... completed>
step UnlockInvalThrEx: ROLLBACK;
step Ic: <... completed>
step SV1: SELECT * FROM continuous_view order by 1;
time_bucket    count          

0              5              
5              5              
10             5              

starting permutation: I1 Refresh LockInval Refresh Sb S1 Sc UnlockInval
step I1: INSERT INTO ts_continuous_test VALUES (1, 1);
LOG:  materializing continuous aggregate public.continuous_view: nothing to invalidate, new range up to 15
step Refresh: REFRESH MATERIALIZED VIEW continuous_view;
step LockInval: BEGIN; LOCK TABLE _timescaledb_catalog.continuous_aggs_hypertable_invalidation_log;
step Refresh: REFRESH MATERIALIZED VIEW continuous_view; <waiting ...>
step Sb: BEGIN; SET LOCAL lock_timeout = '50ms'; SET LOCAL deadlock_timeout = '10ms';
step S1: SELECT count(*) FROM ts_continuous_test;
count          

31             
step Sc: COMMIT;
step UnlockInval: ROLLBACK;
LOG:  new materialization range not found for public.ts_continuous_test (time column time): not enough new data past completion threshold of 15 as of 29
LOG:  materializing continuous aggregate public.continuous_view: nothing to invalidate, no new range
LOG:  materializing continuous aggregate public.continuous_view: no new range to materialize or invalidations found, exiting early
step Refresh: <... completed>

starting permutation: I1 Refresh LockInval Sb S1 Refresh Sc UnlockInval
step I1: INSERT INTO ts_continuous_test VALUES (1, 1);
LOG:  materializing continuous aggregate public.continuous_view: nothing to invalidate, new range up to 15
step Refresh: REFRESH MATERIALIZED VIEW continuous_view;
step LockInval: BEGIN; LOCK TABLE _timescaledb_catalog.continuous_aggs_hypertable_invalidation_log;
step Sb: BEGIN; SET LOCAL lock_timeout = '50ms'; SET LOCAL deadlock_timeout = '10ms';
step S1: SELECT count(*) FROM ts_continuous_test;
count          

31             
step Refresh: REFRESH MATERIALIZED VIEW continuous_view; <waiting ...>
step Sc: COMMIT;
step UnlockInval: ROLLBACK;
LOG:  new materialization range not found for public.ts_continuous_test (time column time): not enough new data past completion threshold of 15 as of 29
LOG:  materializing continuous aggregate public.continuous_view: nothing to invalidate, no new range
LOG:  materializing continuous aggregate public.continuous_view: no new range to materialize or invalidations found, exiting early
step Refresh: <... completed>
